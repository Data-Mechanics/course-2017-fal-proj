def product(R, S):
    return [(t,u) for t in R for u in S]

def aggregate(R, f):
    keys = {r[0] for r in R}
    return [(key, f([v for (k,v) in R if k == key])) for key in keys]


def dist(p, q):
    (x1,y1) = p
    (x2,y2) = q
    return (x1-x2)**2 + (y1-y2)**2

def plus(args):
    p = [0,0]
    for (x,y) in args:
        p[0] += x
        p[1] += y
    return tuple(p)

def scale(p, c):
    (x,y) = p
    return (x/c, y/c)

M = [(520.23, 50.32), (642.2,6230.1), (702.32,72.2), (832.23,8.20), (902.2,902.2), (111.1,92.2), (-123.1,23.1), (-32.1,-74.2), (30.32,-10.2), (14.2,343.2), (-2.2,15.20)]
P = [(42.3155796777, -71.0916505804), (42.3614845374, -71.1385871477), (42.3540662232, -71.1611676235), (42.3526051342, -71.1543441945), (42.3541442616, -71.1688264959), (42.3466269585, -71.1672625179), (42.3438494917, -71.1492928672), (42.344174231, -71.1588286804), (42.3363184842, -71.1589684157), (42.339635984, -71.1500991889), (42.3414718489, -71.1438262063), (42.3517439571, -71.147444287), (42.3492513798, -71.14245683), (42.3469580656, -71.1379846918), (42.3513290328,-71.128215847), (42.3500028821, -71.1334044612), (42.3568717873, -71.1297575887), (42.3594777688, -71.1212627964), (42.3497817578, -71.1034479871), (42.3491638983, -71.0933199695), (42.3447837738, -71.0972291191), (42.3462887243, -71.1033879487), (42.339425123, -71.1017927876), (42.3450749931, -71.0880610223), (42.3419667087, -71.0886374471), (42.3398654737, -71.0896051896), (42.3431682275, -71.0958460853), (42.3446951466, -71.0841679792), (42.3476384405, -71.0793850633), (42.3497222895, -71.0838807341), (42.351835341, -71.0755159067), (42.3541192401, -71.0770215834), (42.3515180626, -71.0856801965), (42.357708593, -71.0694111834), (42.3603354129, -71.068633385), (42.3634254434, -71.0681679411), (42.359344207, -71.0639956129), (42.3659888899, -71.0634636132), (42.3669461849, -71.0561502076), (42.3645207748, -71.0569749974), (42.3601705854, -71.0536276966), (42.3644366771, -71.0541677951), (42.3676700957, -71.0517846174), (42.3727232662, -71.0600983411), (42.3768528913, -71.0567930644), (42.3787346629, -71.0633840838), (42.3739280516, -71.0657981901), (42.3834686048, -71.0698578276), (42.3790535534, -71.0520713919), (42.3814565732, -71.0396165196), (42.3775778212, -71.0357576955), (42.3723628272, -71.0429794594), (42.3682184204, -71.0379018576), (42.3697765662, -71.0339103554), (42.371887757, -71.0372695279), (42.3753575314, -71.0332713325), (42.3823724683, -71.029797927), (42.3872518817, -71.0157245895), (42.3856391623, -71.0040256669), (42.3633060934, -71.0339243885), (42.3347618576, -71.0279301448), (42.3325583738, -71.0326798022), (42.3334669511, -71.0369483424), (42.3323987525, -71.0428981298), (42.3368684838, -71.0382133093), (42.3491099854, -71.0424509841), (42.3385217386, -71.0539041193), (42.3354034092, -71.0514926353), (42.3316205862, -71.0499170921), (42.3262843905, -71.0542968492), (42.3396147883, -71.0563203202), (42.3525199084, -71.0572449419), (42.3496539111, -71.063914401), (42.3484105586, -71.0703570363), (42.3453809464, -71.0647064913), (42.3419361322, -71.0718233569), (42.3432584355, -71.0753770418),(42.3458875797, -71.0761483819), (42.3411487325, -71.0809849713), (42.33842826, -71.0781590586), (42.3359561416, -71.0727568883), (42.3398063002, -71.0670729048), (42.329331742, -71.0705289602), (42.3274519509, -71.0790503634), (42.3321185797, -71.080898505), (42.3356823595, -71.0825418095), (42.3333667581, -71.0880448124), (42.3346057381, -71.0962094582), (42.3323458927, -71.1016908302), (42.3345666461, -71.106830346), (42.3283905771, -71.1074807597), (42.3244315416, -71.1038625357), (42.319327163, -71.0976901514), (42.3277602393, -71.0937549506), (42.3207186814, -71.0929140339), (42.3226963157, -71.0860339999), (42.3203184899, -71.0800303292), (42.3154741913, -71.0896519064), (42.313747923, -71.0839483413), (42.3094484841, -71.0872292144), (42.3023758311, -71.0820198138), (42.3071378264, -71.0790559348), (42.3109366103, -71.0765050104), (42.3171635761, -71.0747097432), (42.3229603641, -71.0722752811), (42.3241310483, -71.0600286096), (42.3164851574, -71.0411574614), (42.3093602419, -71.0505762555), (42.3156410437, -71.0555949012), (42.3163259082, -71.0622197577), (42.3199356961, -71.0668701025), (42.3152689049, -71.0698537242), (42.3114940745, -71.064370673), (42.3060363968, -71.0611893994), (42.3036111109, -71.0659136377), (42.3073663888, -71.0705166945), (42.3008408262, -71.0755307908), (42.2996757959, -71.0675667214), (42.2984295914, -71.0534815372), (42.295023151, -71.0661697011), (42.2939435322, -71.0750607488), (42.2960417571, -71.0849876986), (42.290187152, -71.0874302771), (42.2848003974, -71.085721479), (42.2827979494, -71.0797971888), (42.281787026, -71.0708445892), (42.2882344188, -71.0707473), (42.2908490702, -71.0562792883), (42.2911648539, -71.0433454845), (42.2823438877, -71.0486431631), (42.2779028986, -71.0605610392), (42.2737939013, -71.074630363), (42.2721851007, -71.1001707884), (42.2741528562, -71.0859477193), (42.2826649604, -71.0950818684), (42.2787961734, -71.0920461176), (42.2961825927, -71.1157385459), (42.2804960917, -71.1170508363), (42.286805209, -71.1132774688), (42.286433334, -71.1225529301), (42.277913794, -71.1265658254), (42.2821619171, -71.1414487019), (42.2829171907, -71.1326049312), (42.2959948088, -71.1404447508), (42.2902868451, -71.1346397855), (42.3117567606, -71.1182631441), (42.3056862968, -71.1173049372), (42.3093513499, -71.1286068744), (42.305157024, -71.1083674637), (42.3126415637, -71.1019312823), (42.3139016525, -71.1116653761), (42.3206587069, -71.1042024464), (42.3191097097, -71.1088406629), (42.3242557394, -71.1112109874), (42.2899199207, -71.1713259737), (42.2873319598, -71.1570117019), (42.2791296544, -71.1507098379), (42.272766189, -71.1694026267), (42.2685020274, -71.156968693), (42.2600600539, -71.151245271), (42.245747915, -71.1379777407), (42.2679970729, -71.1251893266), (42.2749378282, -71.1366738674), (42.2577217313, -71.1284205708), (42.2371007532, -71.1299497302), (42.2490711563, -71.1173635008), (42.2588140725, -71.118815948), (42.2693174734, -71.110981442), (42.3286625109, -70.9651339332), (42.3026765791, -71.0949337268), (42.2639801387, -71.138406447), (42.298737869, -71.1236661821), (42.2879298467, -71.104713893), (42.3429238145, -71.0286195858), (42.3634527123, -71.0122398933), (42.3593648769, -71.1063073719), (42.3285749338, -71.1110740086)]

OLD = []
while OLD != M:
    OLD = M

    MPD = [(m, p, dist(m,p)) for (m, p) in product(M, P)]
    PDs = [(p, dist(m,p)) for (m, p, d) in MPD]
    PD = aggregate(PDs, min)
    MP = [(m, p) for ((m,p,d), (p2,d2)) in product(MPD, PD) if p==p2 and d==d2]
    MT = aggregate(MP, plus)

    M1 = [(m, 1) for ((m,p,d), (p2,d2)) in product(MPD, PD) if p==p2 and d==d2]
    MC = aggregate(M1, sum)

    M = [scale(t,c) for ((m,t),(m2,c)) in product(MT, MC) if m == m2]
    print(sorted(M))